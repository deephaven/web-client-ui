@use 'sass:map';
@use 'sass:string';
@import '@deephaven/components/scss/custom.scss';

.isolated-section-query {
  .hide-when-isolated,
  :not(.sample-section) > h2 {
    display: none;
  }
}

.ui-title {
  color: var(--dh-color-text);
  border-bottom: 1px solid $gray-200;
  padding-bottom: 10px;
  margin: 1.5rem 0;
}

pre {
  color: $gray-300;
}

.swatch {
  height: 2.5rem;
  width: 100%;
  text-align: center;
  line-height: 2.5rem;
}

.gray-swatch {
  display: flex;
  span {
    flex: 1 0 50%;
  }
}

@mixin swatch-with-label($label) {
  margin-top: 2.5rem;
  position: relative;
  &::before {
    content: '#{$label}';
    color: var(--dh-color-text);
    display: block;
    position: absolute;
    font-size: 10px;
    top: -2rem;
  }
}

@mixin swatch-color($color, $value, $class-prefix: 'swatch') {
  // Expose value in :after content to make use of it in style guide
  $exposed-value: #{$value};

  // Strip surrounding 'var(' ... ')' if present
  @if string.index($exposed-value, 'var(') == 1 {
    $exposed-value: string.slice($exposed-value, 5, -2);
  }

  .#{$class-prefix}-#{$color} {
    display: grid;
    grid-template-columns: 120px 1fr;
    text-align: left;
    white-space: nowrap;
    background-color: #{$value};
    padding: 0 20px 0 36px;
    &::after {
      content: '#{$exposed-value}';
      grid-column: 2;
    }
  }
}

@each $color, $value in $semantic-colors {
  @include swatch-color($color, $value);
}

@each $color, $value in $theme-colors {
  $var: '';

  $semantic-value: map.get($bootstrap-dh-semantic-map, $value) or '';
  @if $semantic-value != '' {
    $var: var(--dh-color-#{$semantic-value}-bg);
  } @else if $value == 'light' {
    $var: var(--dh-color-gray-light);
  } @else if $value == 'dark' {
    $var: var(--dh-color-gray-dark);
  }

  @include swatch-color($color, $var);
}

// Special case swatches with labels
.gray-swatch-100 {
  @include swatch-with-label('Grays');
}
.swatch-red {
  @include swatch-with-label('Base Colors');
}
.swatch-content-bg {
  border: 1px solid $gray-600;
  @include swatch-with-label('Semantic Colors');
}
.swatch-primary {
  @include swatch-with-label('Brand Colors');
}
.swatch-success {
  @include swatch-with-label('Levels');
}
.swatch-light {
  @include swatch-with-label('Brightness');
}

@each $color, $value in $colors {
  @include swatch-color($color, $value);
}

@each $color, $value in $grays {
  @include swatch-color($color, $value, 'gray-swatch');
}

// The swatch that gets this style gets rendered as N/A in the Bootstrap grays
// section of Styleguide. There is no Bootstrap Gray-XXX corresponding to
// --dh-color-gray-100, but if there were it would be a value in the 800s.
@include swatch-color('8XX', 'var(--dh-color-gray-100)', 'gray-swatch');

.style-guide-container {
  background-color: $content-bg;
  padding: 1rem;
}

h5.sub-title {
  color: $gray-200;
  padding-bottom: 10px;
  margin: 2.5rem 0 1rem 0;
}

.style-guide-inputs {
  .draggable-item-list {
    height: 300px;
  }
}

.navigations {
  position: relative;
  height: 400px;
  width: 325px;
  border: 1px solid $input-border-color;
}

.icons {
  display: grid;
  grid-template-columns: repeat(auto-fit, 62px);
  grid-auto-rows: min-content;
  gap: 8px;
  flex-grow: 1;

  .flash {
    position: fixed;
    top: $spacer;
    right: $spacer;
    opacity: 0;
    padding: $spacer;
    border-radius: $border-radius;
    color: $foreground;
    background-color: $content-bg;
    transition: opacity 0.2s;
    box-shadow: 0 0 4px $black;
    pointer-events: none;
  }

  .flash.in {
    opacity: 1;
  }

  .no-result {
    width: 200px;
  }

  .card {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border-color: transparent;
    background-color: transparent;
    height: auto;
    padding: $spacer-2 2px;

    .svg-inline--fa {
      align-self: center;
    }

    &:focus {
      border-color: $primary;
    }
  }

  .card label {
    max-width: 100%;
    font-size: 0.8rem;
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: pointer;
  }

  /* lol vsPulse gets class fa-pulse, that makes it spins */
  .fa-pulse {
    animation: none;
  }
}

#sample-section-spectrum-comparison-samples {
  // Approximating Spectrum input label styles for easy comparison
  .input-label {
    margin: 0;
    padding: 4px 0 5px;
    font-size: 12px;
    line-height: 1.3;
  }
}
