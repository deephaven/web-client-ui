# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0' # This action defaults to only getting the latest commit. Setting to 0 makes it retrieve the full git commit history

      - name: Fetch base branch (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch --no-tags origin ${{ github.event.pull_request.base.ref }}

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          # If package-lock has not changed, it should be safe to restore all node_modules as they were
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}

      - name: Cache npm
        uses: actions/cache@v2
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          # Only needed if package-lock changed and we'll do npm ci
          # It's possible we don't want to skip this since caches are evicted after 7 days of no access
          # If no new packages are installed for a while, the install could take longer
          # It might not be worth it though if the install only takes another minute vs 10-15s per action to cache this
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache linters
        uses: actions/cache@v2
        with:
          path: |
            .eslintcache
            packages/*/.eslintcache
            .stylelintcache
            packages/*/.stylelintcache
          key: ${{ runner.os }}-lintcache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-lintcache-

      # Only need to install deps if package-lock changed
      # Do this before restoring build cache since npm ci cleans node_modules
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci --no-audit

      # This is for webpack/terser cache mainly which helps build speed
      # Cache on pushes to main should end up using the cache from the previous commit to main
      # PRs should hit the cache on the base branch first, then future commits hit the cache on the PR
      # Don't skip this on node_modules hit b/c package-lock will change less often than this cache
      # The result would be less recent build caches if it were skipped
      - name: Cache node_modules/.cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules/.cache
            packages/*/node_modules/.cache
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-cache-

      - name: Build
        run: npm run build

      # Run unit tests on all files for accurate code coverage
      # Lint only changed files so linting is faster
      - name: Test (Pull Request)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          npm run test:unit -- --cacheDirectory node_modules/.cache/jest
          npm run test:lint -- --changedSince origin/${{ github.event.pull_request.base.ref }} --cacheDirectory node_modules/.cache/jest
          npm run test:golden-layout

      - name: Test (Push)
        if: ${{ github.event_name == 'push' }}
        run: |
          npm run test:unit -- --cacheDirectory node_modules/.cache/jest
          npm run test:lint -- --lastCommit --cacheDirectory node_modules/.cache/jest
          npm run test:golden-layout

      - name: Codecov report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          flags: unit
